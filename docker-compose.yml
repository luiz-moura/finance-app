version: '3.8'

services:
  php:
    image: php8.1/app
    build:
      context: ./docker
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      - pgsql
    networks:
      - symfony-network

  nginx:
    image: nginx:latest
    ports:
      - ${APP_PORT:-8080}:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
    depends_on:
      - php
    networks:
      - symfony-network

  nodejs:
    image: node:18
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    command: yarn install
    ports:
      - 3000:3000
    networks:
      - symfony-network

  composer:
    image: composer:latest
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - symfony-network

  pgsql:
    image: postgres:14-alpine
    environment:
      PGPASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_DB: ${DB_DATABASE:-app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_USER: ${DB_USERNAME:-symfony}
    ports:
      - ${DB_PORT:-5432}:5432
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', '${DB_DATABASE:-app}', '-U', '${DB_USERNAME:-symfony}']
      retries: 3
      timeout: 5s
    volumes:
      - pgsql-volume:/var/lib/postgresql/data
    networks:
      - symfony-network

networks:
  symfony-network:
    driver: bridge
volumes:
  pgsql-volume:
    driver: local
